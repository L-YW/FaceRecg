# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hud.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QGraphicsScene, QGraphicsPixmapItem


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView_navi = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_navi.setGeometry(QtCore.QRect(110, 110, 195, 165))
        self.graphicsView_navi.setObjectName("graphicsView")
        self.graphicsView_navi.setStyleSheet("background:transparent;")
        self.openGLWidget = QtWidgets.QOpenGLWidget(self.centralwidget)
        self.openGLWidget.setGeometry(QtCore.QRect(310, 110, 195, 165))
        self.openGLWidget.setObjectName("openGLWidget")
        self.graphicsView_back = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_back.setGeometry(QtCore.QRect(0, 0, 801, 461))
        self.graphicsView_back.setObjectName("graphicsView_2")
        self.graphicsView_state = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_state.setGeometry(QtCore.QRect(510, 110, 200, 165))
        self.graphicsView_state.setObjectName("graphicsView_3")
        self.graphicsView_state.setStyleSheet("background:transparent;")
        self.graphicsView_back.raise_()
        self.graphicsView_navi.raise_()
        self.graphicsView_state.raise_()
        self.openGLWidget.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HUD"))

    def background(self):
        self.scene_back = QGraphicsScene()
        self.pixmap_back = QGraphicsPixmapItem()
        self.scene_back.addItem(self.pixmap_back)
        self.graphicsView_back.setScene(self.scene_back)
        img_back = QtGui.QPixmap("background.jpg")
        self.pixmap_back.setPixmap(img_back)

    def navi_image(self):
        self.scene = QGraphicsScene()
        self.pixmap = QGraphicsPixmapItem()
        self.scene.addItem(self.pixmap)
        self.graphicsView_navi.setScene(self.scene)
        img_navi = QtGui.QPixmap("image1.jpg")
        self.pixmap.setPixmap(img_navi)

    def serial_translation(self):
        self.drowsy_result = 1 #통신을 통해 받아온 정보로 정면 상태 여부를 1,2로 구분

    def face_detection(self):
        self.openGLWidget.clear()

    def drowsy_state(self):
        self.scene_state = QGraphicsScene()
        self.pixmap_state = QGraphicsPixmapItem()
        self.scene_state.addItem(self.pixmap_state)
        self.graphicsView_state.setScene(self.scene_state)
        self.drowsy_result = 2
        if self.drowsy_result == 1 : #정면일때
            img_state = QtGui.QPixmap("normal.jpg")
        elif self.drowsy_result == 2 : #정면이 아닐때
            img_state = QtGui.QPixmap("warning.jpg")
        self.pixmap_state.setPixmap(img_state)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.background()
    ui.navi_image()
    ui.drowsy_state()
    MainWindow.show()
    sys.exit(app.exec_())
